{"version":3,"sources":["Components/Loader/index.tsx","Components/LoadingCover.tsx","App/Routes/routes.tsx","App/Routes/RouteRenderer.tsx","App/App.tsx","Tools/Store/slices/index.ts","Tools/Store/index.tsx","reportWebVitals.ts","Assets/icons/exclamation-solid.svg","Components/ErrorBoundary/ErrorBoundary.tsx","index.tsx","Tools/Utils/React.tsx","Tools/Store/slices/LocalCacheSlice.ts","Tools/Store/useStore.ts","App/Config/constants.ts"],"names":["Loader","_jsx","className","children","Array","map","_","index","LoadingCover","_ref","routesArray","path","exact","component","lazy","Navigate","to","RouteRenderer","props","isFirstRenderRef","useRef","fallback","base","defaultRoute","routes","DefaultRoute","current","Route","element","replace","Suspense","_jsxs","Routes","route","i","concat","App","RoutesRenderer","compressor","createCompressor","reducers","combineReducers","localStorage","persistReducer","storage","key","keyPrefix","CONFIG","APP_SHORT_NAME","blacklist","transforms","LocalCacheReducer","reducer","store","configureStore","middleware","getDefMid","serializableCheck","Store","Provider","PersistGate","persistor","persistStore","reportWebVitals","_path","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","SvgExclamationSolid","svgRef","title","titleId","xmlns","viewBox","ref","id","d","ForwardRef","ErrorBoundary","Component","constructor","state","hasError","remainTime","getDerivedStateFromError","error","componentDidCatch","errorInfo","isDev","console","interval","setInterval","this","setState","s","window","location","href","clearInterval","render","Exclamation","Button","app","BrowserRouter","container","document","querySelector","createRoot","process","classNames","classes","_len","entries","_key","forEach","filter","p","join","_len2","_key2","copyToClipboard","async","type","blob","Blob","content","data","ClipboardItem","navigator","clipboard","write","localCacheSlice","createSlice","name","initialState","openShareModal","activePage","setOpenShareModal","payload","setActivePage","_ref2","useLocalCache","selector","useStore","actions","dispatch","useDispatch","useSelector","APP_NAME","VERSION","LOCAL","FRONT_DOMAIN","PRODUCTION","DEVELOPMENT","MODE"],"mappings":"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","file":"static/js/main.5003d86b.chunk.js","sourcesContent":["import './index.scss';\n\nconst Loader = () => {\n\treturn (\n\t\t<div className={'loader-layout'}>\n\t\t\t{[...Array(9)].map((_, index) => (\n\t\t\t\t<div key={index} className='loading-circle' />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Loader;\n","import Loader from './Loader';\n\ntype LoadingCoverProps = { className?: string };\n\nconst LoadingCover: FC<LoadingCoverProps> = ({ className = '' }) => (\n\t<div className={'loading-cover ' + className}>\n\t\t<Loader />\n\t</div>\n);\n\nexport default LoadingCover;\n","import { lazy } from 'react';\nimport { Path } from './RouteRenderer';\nimport { Navigate } from 'react-router-dom';\n\nexport const routesArray: Path[] = [\n\t{\n\t\tpath: ['/'],\n\t\texact: false,\n\t\tcomponent: lazy(() => import('../../Views/Layout')),\n\t},\n\t{\n\t\tpath: ['*'],\n\t\texact: true,\n\t\tcomponent: () => <Navigate to={'/'} />,\n\t},\n];\n\nexport default routesArray;\n","import routesArray from './routes';\nimport LoadingCover from '../../Components/LoadingCover';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { LazyExoticComponent, Suspense, useRef } from 'react';\n\nexport type Path = {\n\texact: boolean;\n\tpath: string[];\n\tcomponent: LazyExoticComponent<() => JSX.Element> | (() => JSX.Element) | FC;\n};\n\nexport type RouteRendererProps = {\n\tbase?: string;\n\troutes?: Path[];\n\tdefaultRoute?: string;\n\tfallback?: () => JSX.Element;\n};\n\nconst RouteRenderer: FC<RouteRendererProps> = props => {\n\tconst isFirstRenderRef = useRef(true);\n\tconst { fallback, base = '', defaultRoute, routes = routesArray } = props;\n\tconst is_default_route_redirect = !!(isFirstRenderRef.current && defaultRoute);\n\n\tlet DefaultRoute;\n\tif (is_default_route_redirect) {\n\t\tisFirstRenderRef.current = false;\n\t\tDefaultRoute = <Route key='default' path={base} element={<Navigate to={base + defaultRoute} replace />} />;\n\t}\n\n\treturn (\n\t\t<Suspense fallback={fallback?.() || <LoadingCover />}>\n\t\t\t<Routes>\n\t\t\t\t{DefaultRoute}\n\t\t\t\t{routes.map((route, i) =>\n\t\t\t\t\troute.path.map(path => {\n\t\t\t\t\t\treturn <Route key={i} path={`${base}${path}`} element={<route.component />} />;\n\t\t\t\t\t})\n\t\t\t\t)}\n\t\t\t</Routes>\n\t\t</Suspense>\n\t);\n};\n\nexport default RouteRenderer;\n","import '@assets/less/rsuite.config.less';\nimport '@assets/scss/base/export.scss';\nimport '@assets/scss/base/RSuite.scss';\nimport '@assets/scss/App.scss';\nimport '@assets/scss/base/tailwind.scss';\nimport RoutesRenderer from './Routes/RouteRenderer';\n\nconst App = () => {\n\treturn <RoutesRenderer />;\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport LocalCacheReducer from './LocalCacheSlice';\nimport { CONFIG } from './../../../App/Config/constants';\nimport createCompressor from 'redux-persist-transform-compress';\n\nconst compressor = createCompressor();\n\nconst reducers = combineReducers({\n\tlocalStorage: persistReducer(\n\t\t{\n\t\t\tstorage,\n\t\t\tkey: 'storage',\n\t\t\tkeyPrefix: `${CONFIG.APP_SHORT_NAME}-`,\n\t\t\tblacklist: ['openShareModal', 'activePage'],\n\t\t\ttransforms: [compressor] as any,\n\t\t},\n\t\tLocalCacheReducer.reducer\n\t),\n});\n\nexport default reducers;\n","// <reference types=\"redux-persist\" />\nimport { Provider } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport reducers from './slices';\n\nexport const store = configureStore({\n\treducer: reducers,\n\tmiddleware: getDefMid => getDefMid({ serializableCheck: false }),\n});\n\nconst Store: FC = ({ children }) => (\n\t<Provider store={store}>\n\t\t<PersistGate persistor={persistStore(store)}>{children}</PersistGate>\n\t</Provider>\n);\n\nexport type StoreTypes = ReturnType<typeof store.getState>;\n\nexport default Store;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgExclamationSolid(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 64 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64 64c0-17.7-14.3-32-32-32S0 46.3 0 64V320c0 17.7 14.3 32 32 32s32-14.3 32-32V64zM32 480a40 40 0 1 0 0-80 40 40 0 1 0 0 80z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgExclamationSolid);\nexport default __webpack_public_path__ + \"static/media/exclamation-solid.139a5771.svg\";\nexport { ForwardRef as ReactComponent };","import './ErrorBoundary.scss';\nimport { Component } from 'react';\nimport { Button } from 'rsuite';\nimport { isDev } from '../../Tools/Utils/React';\nimport { ReactComponent as Exclamation } from '@assets/icons/exclamation-solid.svg';\n\ninterface EBProps {\n\tchildren?: React.ReactNode;\n}\n\nexport default class ErrorBoundary extends Component<EBProps> {\n\tstate = { hasError: false, remainTime: 10 };\n\n\tstatic getDerivedStateFromError(error: any) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error: any, errorInfo: any) {\n\t\t// You can also log the error to an error reporting service\n\t\tif (isDev) return;\n\t\tconsole.error(error, errorInfo);\n\t\tconst interval = setInterval(() => {\n\t\t\tthis.setState((s: any) => {\n\t\t\t\tif (s.remainTime === 0) {\n\t\t\t\t\twindow.location.href = '/';\n\t\t\t\t\treturn clearInterval(interval);\n\t\t\t\t}\n\t\t\t\treturn { ...s, remainTime: s.remainTime - 1 };\n\t\t\t});\n\t\t}, 1000);\n\t}\n\n\trender() {\n\t\tif (!this.state.hasError) return this.props.children;\n\t\treturn (\n\t\t\t<div className='error-boundary-layout'>\n\t\t\t\t<Exclamation className='w-1/3 icon' />\n\t\t\t\t<h1>Something went wrong !</h1>\n\t\t\t\t<Button href='/' className='go-to-home-btn'>\n\t\t\t\t\tBack to home\n\t\t\t\t\t{this.state.remainTime !== 0 ? ` (${this.state.remainTime}s)` : ''}\n\t\t\t\t</Button>\n\t\t\t\t<Button className='report-btn' href='mailto:mybutton@openscilab.com'>\n\t\t\t\t\tReport to OSL\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import App from './App/App';\nimport { createRoot } from 'react-dom/client';\nimport './Assets/scss/index.scss';\nimport Store from './Tools/Store';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport ErrorBoundary from './Components/ErrorBoundary/ErrorBoundary';\n\nconst app = (\n\t<ErrorBoundary>\n\t\t<BrowserRouter>\n\t\t\t<Store>\n\t\t\t\t<App />\n\t\t\t</Store>\n\t\t</BrowserRouter>\n\t</ErrorBoundary>\n);\n\nconst container = document.querySelector('#root');\nconst root = createRoot(container!);\nroot.render(app);\nreportWebVitals();\n","import { Notification, toaster } from 'rsuite';\nimport { PlacementType } from 'rsuite/esm/toaster/ToastContainer';\n\nexport const isDev = process.env.NODE_ENV === 'development';\n\nexport const isProd = process.env.NODE_ENV === 'production';\n\ntype classIfType = { [key: string]: boolean };\nexport const classNames = (...entries: (string | classIfType)[]) => {\n\tlet classes = '';\n\tentries.forEach(e => {\n\t\tif (typeof e === 'string') return (classes += e + ' ');\n\t\tclasses += Object.entries(e || {})\n\t\t\t.filter(p => p[1] === true)\n\t\t\t.map(p => p[0])\n\t\t\t.join(' ');\n\t});\n\treturn classes;\n};\n\nexport const classes = (...entries: (string | classIfType)[]) => ({\n\tclassName: classNames(...(entries || [])),\n});\n\nexport const clickOn = (selector: string) => (document.querySelector(selector) as any)?.click?.();\n\nexport const copyToClipboard = async (content: string) => {\n\tconst type = 'text/plain';\n\tconst blob = new Blob([content], { type: 'text/plain' });\n\tconst data = [new ClipboardItem({ [type]: blob })];\n\treturn await navigator.clipboard.write(data);\n};\n\ntype NotifyOptions = {\n\tduration?: number;\n\tclassName?: string;\n\tclosable?: boolean;\n\tplacement?: PlacementType;\n\ttype?: 'success' | 'error' | 'info' | 'warning';\n};\n\n//---------RsuiteNotification-------------\nexport const notify = (message: string, options?: NotifyOptions) => {\n\tconst type = options?.type;\n\tlet interval = setInterval(() => {\n\t\tif (!!toaster?.push) {\n\t\t\tclearInterval(interval);\n\t\t\ttoaster.push(\n\t\t\t\t<Notification\n\t\t\t\t\ttype={type}\n\t\t\t\t\tclassName={classNames(`rs-custom-toast ${options?.className || ''} `, {\n\t\t\t\t\t\t'bg-error': type === 'error',\n\t\t\t\t\t\t'bg-primary': type === 'info',\n\t\t\t\t\t\t'bg-success': type === 'success',\n\t\t\t\t\t\t'bg-yellow-500': type === 'warning',\n\t\t\t\t\t})}\n\t\t\t\t\tduration={options?.duration || 4500}\n\t\t\t\t\tclosable={options?.closable === undefined ? true : options?.closable}>\n\t\t\t\t\t{message}\n\t\t\t\t</Notification>,\n\t\t\t\t{ placement: options?.placement || 'bottomEnd' }\n\t\t\t);\n\t\t}\n\t}, 200);\n};\n//\n\nexport const Notify = {\n\terror: (message: string, options?: NotifyOptions) => {\n\t\tnotify(message, { type: 'error', ...(options || {}) });\n\t},\n\tinfo: (message: string, options?: NotifyOptions) => {\n\t\tnotify(message, { type: 'info', ...(options || {}) });\n\t},\n\tsuccess: (message: string, options?: NotifyOptions) => {\n\t\tnotify(message, { type: 'success', ...(options || {}) });\n\t},\n\twarning: (message: string, options?: NotifyOptions) => {\n\t\tnotify(message, { type: 'warning', ...(options || {}) });\n\t},\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport useStore from '../useStore';\n\ntype InitStateType = { openShareModal: boolean; activePage: string };\n\nconst initialState: InitStateType = { openShareModal: false, activePage: 'home' };\n\nconst localCacheSlice = createSlice({\n\tname: 'localCache',\n\tinitialState,\n\treducers: {\n\t\tsetOpenShareModal(state, { payload }) {\n\t\t\tstate.openShareModal = payload;\n\t\t},\n\t\tsetActivePage(state, { payload }) {\n\t\t\tstate.activePage = payload;\n\t\t},\n\t},\n});\n\nexport const useLocalCache = () => {\n\tconst { selector } = useStore();\n\treturn selector(s => s?.localStorage);\n};\n\nexport const { setOpenShareModal, setActivePage } = localCacheSlice.actions;\n\nexport default localCacheSlice;\n","import { StoreTypes } from '.';\nimport { useSelector, useDispatch } from 'react-redux';\n\ntype SelectorType = <TState = StoreTypes, TSelected = unknown>(\n\tselector: (state: TState) => TSelected,\n\tequalityFn?: ((left: TSelected, right: TSelected) => boolean) | undefined\n) => TSelected;\n\nconst useStore = () => {\n\tconst dispatch = useDispatch();\n\tconst selector: SelectorType = useSelector;\n\treturn { selector, dispatch };\n};\n\n//* how to use ?\n// const {selector , dispatch} = useStore();\n// dispatch(action()) , selector(state=>state.value)\n\nexport default useStore;\n","const BaseConfig = {\n\tAPP_NAME: 'MyButton',\n\tAPP_SHORT_NAME: 'MyBTN',\n\tVERSION: 0.3,\n};\n\nconst LOCAL = {\n\tFRONT_DOMAIN: 'http://localhost:3000',\n};\n\nconst DEVELOPMENT = {\n\tFRONT_DOMAIN: 'https://dev.mybutton.click',\n};\n\nconst PRODUCTION = {\n\tFRONT_DOMAIN: 'https://mybutton.click',\n};\n\n//? --------------------- Config selection ----------------------------------------\n\nexport type CONFIG_TYPE = typeof BaseConfig & typeof PRODUCTION & typeof DEVELOPMENT & typeof LOCAL;\n\nconst CONFIG_BY_MODE: CONFIG_TYPE = {\n\t...(({ LOCAL, PRODUCTION, DEVELOPMENT } as any)[window.MODE as any] || {}),\n};\n\nexport const CONFIG = { ...BaseConfig, ...CONFIG_BY_MODE };\n\nwindow.CONFIG = CONFIG;\n"],"sourceRoot":""}