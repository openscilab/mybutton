{"version":3,"sources":["Tools/Hooks/useWindow/index.ts","Components/Service/index.tsx","Tools/Utils/IS.ts","Tools/Utils/Object.ts","Assets/icons/clone-regular.svg","Views/Pages/GetButton/index.tsx","Tools/Hooks/useData/index.ts"],"names":["hasFocus","document","useWindow","focused","setFocused","useState","windowSize","setWindowSize","width","window","innerWidth","height","innerHeight","winRef","useRef","setWindowSizeOnResize","useEffect","onFocus","onBlur","addEventListener","removeEventListener","current","size","isMobile","isDesktop","Service","props","checked","setChecked","_jsxs","Radio","className","onClick","onChange","onRemove","title","onSelect","children","_jsx","style","backgroundColor","bg","src","icon","alt","IS","array","data","Array","isArray","date","Date","blob","Blob","string","number","boolean","object_only","function","object","isEqualObjects","_len","arguments","length","objects","_key","first","JSON","stringify","recursiveSort","every","obj","i","sortObject","_ref2","sort","Object","keys","reduce","res","key","_Object$entries","sortedObject","forEach","item","entries","_ref3","value","deepClone","parse","OU","set","curObj","split","_curObj","_curObj2","curKey","isLast","undefined","_path","_extends","assign","bind","n","e","t","r","hasOwnProperty","call","apply","SvgCloneRegular","_ref","svgRef","titleId","xmlns","viewBox","ref","id","d","ForwardRef","GetButton","buttons","setButtons","temp","inputData","dependencies","setData","setTempData","cloned","ou","path","s","discard","useCallback","isChanged","useMemo","useData","url","code","subject","isValid","showCode","openModal","openTooltip","shareMode","selectedServices","setSelectedServices","onAddService","onRemoveService","filtered","filter","service","getShareLink","service_title","concat","CONFIG","FRONT_DOMAIN","getCode","validated_url","urlValidation","selected","Services","includes","map","href","target","rel","borderRadius","paddingLeft","paddingRight","iconUrl","join","Email","Gmail","Telegram","EditableInput","label","defaultValue","errorMessage","placeholder","Whisper","placement","controlId","trigger","speaker","Tooltip","RadioGroup","name","inline","appearance","Button","disabled","SyntaxHighlighter","language","lightfair","onOpen","setTimeout","open","Clone","async","copyToClipboard","Modal","onClose","backdrop","Header","Body","Row","Col","xs","sm","Footer"],"mappings":"sGAAA,WAIA,MA8CMA,EAAWA,IAA0B,qBAAbC,UAA4BA,SAASD,WAEpDE,IAhDGA,KACjB,MAAOC,EAASC,GAAcC,mBAASL,IAChCM,EAAYC,GAAiBF,mBAAqB,CAAEG,MAAOC,OAAOC,WAAYC,OAAQF,OAAOG,cAC9FC,EAASC,iBAAO,CAAEX,UAASG,eAI3BS,EAAwBA,KAC7BR,EAAc,CAAEC,MAAOC,OAAOC,WAAYC,OAAQF,OAAOG,aAAc,EA6BxE,OAxBAI,qBAAU,KACTZ,EAAWJ,KACX,MAAMiB,EAAUA,IAAMb,GAAW,GAC3Bc,EAASA,IAAMd,GAAW,GAGhC,OAFAK,OAAOU,iBAAiB,QAASF,GACjCR,OAAOU,iBAAiB,OAAQD,GACzB,KACNT,OAAOW,oBAAoB,QAASH,GACpCR,OAAOW,oBAAoB,OAAQF,EAAO,CAC1C,GACC,IAEHF,qBAAU,KACTD,IACAN,OAAOU,iBAAiB,SAAUJ,GAC3B,IAAMN,OAAOW,oBAAoB,SAAUL,KAChD,IAEHC,qBAAU,KACTH,EAAOQ,QAAU,CAAElB,UAASG,aAAY,GACtC,CAACH,EAASG,IAIN,CACNO,SACAS,KAAMhB,EACNN,SAAUG,EACVoB,UAAoB,OAAVjB,QAAU,IAAVA,OAAU,EAAVA,EAAYE,OAAQ,IAC9BgB,WAAqB,OAAVlB,QAAU,IAAVA,OAAU,EAAVA,EAAYE,OAAQ,IAC/B,C,kGCbaiB,MAtBEC,IAChB,MAAOC,EAASC,GAAcvB,mBAASqB,EAAMC,UAAW,GAWxD,OACCE,eAACC,IAAK,CAACC,UAAU,gBAAgBJ,QAASA,EAASK,QATnCC,KACXN,EACAD,EAAMQ,SAASR,EAAMS,OADZT,EAAMU,SAASV,EAAMS,OAGnCP,GAAYD,EAAQ,EAKiDU,SAAA,CACpEC,cAAA,OAAKP,UAAU,eAAeQ,MAAO,CAAEC,gBAAiBd,EAAMe,IAAKJ,SAClEC,cAAA,OAAKI,IAAKhB,EAAMiB,KAAMC,IAAKlB,EAAMS,UAElCG,cAAA,MAAAD,SAAKX,EAAMS,UACJ,E,SClBKU,MAZG,CACjBC,MAAQC,GAA6BC,MAAMC,QAAQF,GACnDG,KAAOH,GAA4BA,aAAgBI,KACnDC,KAAOL,GAA4BA,aAAgBM,KACnDC,OAASP,GAA8C,kBAATA,EAC9CQ,OAASR,GAA8C,kBAATA,EAC9CS,QAAUT,GAA+C,mBAATA,EAChDU,YAAcV,GAA8C,kBAATA,EACnDW,SAAWX,GAAgD,oBAATA,EAClDY,OAASZ,GAA8C,kBAATA,IAAsBC,MAAMC,QAAQF,ICN5E,MAAMa,EAAiB,WAAoC,IAAD,IAAAC,EAAAC,UAAAC,OAA/BC,EAAO,IAAAhB,MAAAa,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAPD,EAAOC,GAAAH,UAAAG,GACxC,MAAMC,EAAQC,KAAKC,UAAUC,EAAcL,EAAQ,KACnD,OAAOA,EAAQM,OAAM,CAACC,EAAKC,IAAY,IAANA,GAAWL,KAAKC,UAAUC,EAAcE,MAAUL,GACpF,EAiBaO,EAAcF,IAA+C,IAADG,EACxE,OAAI1B,MAAMC,QAAQsB,GAA6B,QAAvBG,EAAO,IAAKH,GAAO,WAAI,IAAAG,OAAA,EAAhBA,EAAkBC,OAEhDC,OAAOC,KAAKN,GAAO,CAAC,GAClBI,OAEAG,QAAO,CAACC,EAAKC,KAAUD,EAAIC,GAAOT,EAAIS,GAAOD,IAAM,CAAC,EAAS,EAIpDV,EAAiBE,IAA+C,IAADU,EAC3E,GAAmB,kBAARV,EAAkB,OAC7B,IAAIW,EAAoBT,EAAWF,GASnC,OAPIvB,MAAMC,QAAQiC,GACjBA,EAAaC,SAAQ,CAACC,EAAMZ,IAAsB,kBAATY,IAAsBF,EAAaV,GAAKH,EAAce,MAE7D,QAAlCH,EAAAL,OAAOS,QAAQH,GAAgB,CAAC,UAAE,IAAAD,GAAlCA,EAAoCE,SACnCG,IAAA,IAAEN,EAAKO,GAAMD,EAAA,MAAsB,kBAAVC,IAAuBL,EAAaF,GAAOX,EAAckB,GAAS,IAAI,IAG1FL,CAAY,EAgCPM,EAAqC7B,GAAcQ,KAAKsB,MAAMtB,KAAKC,UAAUT,GAAU,CAAC,IA2CxF+B,EAAMnB,IAcX,CAAEoB,IAbGA,CAACX,EAAwBO,KACpC,IAAIK,EAASrB,EACb,MAAMM,EAAOhC,EAAGS,OAAO0B,GAAO,IAAO,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKa,MAAM,MAAQb,EACrD,IAAK,IAAIR,EAAI,EAAGA,EAAIK,EAAKd,OAAQS,IAAK,CAAC,IAADsB,EAAAC,EACrC,MAAMC,EAAa,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAOL,GAChByB,EAASzB,KAAU,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMd,QAAS,OACXmC,KAAf,QAANJ,EAAAF,SAAM,IAAAE,OAAA,EAANA,EAASE,MAAuBJ,EAAOI,GAAU,CAAC,GAClDC,IAAQL,EAAOI,GAAUT,GAC7BK,EAAe,QAATG,EAAGH,SAAM,IAAAG,OAAA,EAANA,EAASC,EACnB,CACA,OAAOzB,CAAG,I,IClIR4B,E,uEACJ,SAASC,IAAa,OAAOA,EAAWxB,OAAOyB,OAASzB,OAAOyB,OAAOC,OAAS,SAAUC,GAAK,IAAK,IAAIC,EAAI,EAAGA,EAAI1C,UAAUC,OAAQyC,IAAK,CAAE,IAAIC,EAAI3C,UAAU0C,GAAI,IAAK,IAAIE,KAAKD,GAAG,CAAG,GAAEE,eAAeC,KAAKH,EAAGC,KAAOH,EAAEG,GAAKD,EAAEC,GAAK,CAAE,OAAOH,CAAG,EAAGH,EAASS,MAAM,KAAM/C,UAAY,CAEnR,SAASgD,EAAgBC,EAAMC,GAC7B,IAAI,MACF7E,EAAK,QACL8E,KACGvF,GACDqF,EACJ,OAAoB,gBAAoB,MAAOX,EAAS,CACtDc,MAAO,6BACPC,QAAS,cACTC,IAAKJ,EACL,kBAAmBC,GAClBvF,GAAQS,EAAqB,gBAAoB,QAAS,CAC3DkF,GAAIJ,GACH9E,GAAS,KAAMgE,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EmB,EAAG,2XAEP,CACA,MAAMC,EAA0B,aAAiBT,GAClC,Q,+DC8OAU,UAnPGA,KACjB,MAAM,SAAEjG,GAAarB,eACduH,EAASC,GAAcrH,sBACxB,IAAEsF,EAAG,KAAEgC,GCZS,SAAyBC,GAA4C,IAA9BC,EAAmB/D,UAAAC,OAAA,QAAAmC,IAAApC,UAAA,GAAAA,UAAA,GAAG,GACnF,MAAOf,EAAM+E,GAAWzH,mBAAYmF,EAAUoC,KACvCD,EAAMI,GAAe1H,mBAAYmF,EAAUoC,IAElD5G,qBAAU,KACT,MAAMgH,EAASxC,EAAUoC,GACrBhE,EAAeoE,EAAQjF,KAC3BgF,EAAYC,GACZF,EAAQE,GAAO,GACbH,GAEH7G,qBAAU,KACL4C,EAAe+D,EAAM5E,IACzBgF,EAAYvC,EAAUzC,GAAM,GAC1B,CAACA,IAEJ,MAAM4C,EAAM,CACX5C,KAAM+E,EACNH,KAAMI,EACNE,GAAI,CACHlF,KAAMA,CAACmF,EAAe3C,IAAeuC,GAAQK,GAAKzC,EAAGF,EAAU2C,IAAIxC,IAAIuC,EAAM3C,KAC7EoC,KAAMA,CAACO,EAAe3C,IAAewC,GAAYI,GAAKzC,EAAGF,EAAU2C,IAAIxC,IAAIuC,EAAM3C,OAI7E6C,EAAUC,uBAAY,KAC3BN,EAAYhF,EAAK,GACf,CAAC6E,EAAW7E,IAETuF,EAAYC,mBAAQ,KAAO3E,EAAeb,EAAM4E,IAAO,CAAC5E,EAAM4E,IAEpE,MAAO,CAAEhC,IAAK4C,mBAAQ,IAAM5C,GAAK,IAAKgC,OAAM5E,OAAMqF,UAASE,YAC5D,CDpBuBE,CAAQ,CAC7BC,IAAK,GACLC,KAAM,GACNC,QAAS,GACTC,SAAS,EACTC,UAAU,EACVC,WAAW,EACXC,aAAa,EACbC,UAAW,YAELC,EAAkBC,GAAuB7I,mBAAmB,CAAC,UAG9D8I,EAAgBhH,IACrB+G,EAAoB,IAAID,EAAkB9G,GAAO,EAG5CiH,EAAmBjH,IACxB,MAAMkH,EAA2B,OAAhBJ,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBK,QAAOC,GAAWA,IAAYpH,IACjE+G,EAAoBG,EAAS,EAGxBG,EAAeA,CAACC,EAAuBhB,IACtC,GAANiB,OAAUC,IAAOC,aAAY,oBAAAF,OAAmBD,EAAa,aAAAC,OAAY/B,EAAKgB,QAAO,UAAAe,OAASjB,GAGzFoB,EAAUA,KACf,IAAKlC,EAAKc,IAET,YADA9C,EAAIsC,GAAGN,KAAK,WAAW,GAGxB,GAAgC,IAA5BsB,EAAiBlF,OAEpB,YADA4B,EAAIsC,GAAGN,KAAK,YAAY,GAIzB,MAAMmC,EAAgBC,EAAcpC,EAAKc,KAAO,IAC1CuB,EAAWC,EAASH,GAAeR,QAAOC,GAAWN,EAAiBiB,SAASX,EAAQpH,SAEvFsF,EACLnF,cAAA,OAAKP,UAAU,cAAaM,SAC1B2H,EAASG,KAAI,CAACZ,EAAS/E,KACvB,MAAM4F,EAA0B,WAAnBzC,EAAKqB,UAAyBO,EAAQd,IAAMe,EAAaD,EAAQpH,MAAO2H,GACrF,OACCxH,cAAA,KAAG8H,KAAMA,EAAMC,OAAO,SAASC,IAAI,aAAYjI,SAC9CC,cAAA,OACCI,IAAK6G,EAAQ5G,KACbnC,MAAO,GACPG,OAAQ,GACR4B,MAAO,CAAEC,gBAAiB+G,EAAQ9G,GAAI8H,aAAc,EAAGC,YAAa,EAAGC,aAAc,GACrF7H,IAAI,MAN+C4B,EAQjD,MAKRkD,EAAWD,GAEX,MAAMiB,EAAI,kBAAAgB,OACPM,EACAG,KAAIZ,IACJ,MAAMa,EAA0B,WAAnBzC,EAAKqB,UAAyBO,EAAQd,IAAMe,EAAaD,EAAQpH,MAAO2H,GACrF,MAAM,YAANJ,OAAmBU,EAAI,gCAAAV,OAA+BH,EAAQmB,QAAO,qDAAAhB,OAAoDH,EAAQ9G,GAAE,iCAEnIkI,KAAK,YAAQ,cAEhBhF,EAAIsC,GAAGN,KAAK,OAAQe,GAEpB/C,EAAIsC,GAAGN,KAAK,YAAY,EAAK,EAGxBoC,EAAiBtB,GAClBA,EAAIyB,SAAS,OAAezB,EAE1B,UAANiB,OAAiBjB,GAKZwB,EAAYxB,GACV,CACN,CACCtG,MAAO,QACPQ,KAAMiI,IACNF,QAAS,sFACTjI,GAAI,UACJgG,IAAI,mBAADiB,OAAqB/B,EAAKgB,QAAO,UAAAe,OAASjB,IAE9C,CACCtG,MAAO,QACPQ,KAAMkI,IACNH,QAAS,sFACTjI,GAAI,UACJgG,IAAI,wDAADiB,OAA0D/B,EAAKgB,QAAO,UAAAe,OAASjB,IAEnF,CACCtG,MAAO,WACPQ,KAAMmI,IACNJ,QAAS,yFACTjI,GAAI,UACJgG,IAAI,qCAADiB,OAAuCjB,EAAG,UAAAiB,OAAS/B,EAAKgB,WAU9D,OAJA3H,qBAAU,KACL2G,EAAKkB,UAAUgB,GAAS,GAC1B,CAACZ,IAGHpH,eAAA,OAAKE,UAAU,oBAAmBM,SAAA,CACjCR,eAAA,OAAKE,UAAU,uBAAsBM,SAAA,CACpCC,cAAA,MAAAD,SAAI,0BACJR,eAAA,OAAKE,UAAU,kBAAiBM,SAAA,CAC/BC,cAACyI,IAAa,CACbC,MAAM,OACNC,aAActD,EAAKc,IACnBG,QAASjB,EAAKiB,QACdsC,aAAa,WACbjJ,SAAUuE,IACJmB,EAAKiB,SACTjD,EAAIsC,GAAGN,KAAK,WAAW,GAExBhC,EAAIsC,GAAGN,KAAK,MAAOnB,EAAE6D,OAAO9E,MAAM,EAEnC4F,YAAY,4BAEb7I,cAACyI,IAAa,CACbC,MAAM,UACN/I,SAAUuE,IACTb,EAAIsC,GAAGN,KAAK,UAAWnB,EAAE6D,OAAO9E,MAAM,EAEvC0F,aAActD,EAAKgB,QACnBwC,YAAY,eAGd7I,cAAC8I,IAAO,CACPC,UAAU,MACVC,UAAU,mBACVC,QAAQ,QACRC,QACClJ,cAACmJ,IAAO,CAAC1J,UAAU,qBAAoBM,SAAC,mGAGxCA,SACDC,cAAA,OAAKP,UAAU,qBAAoBM,SAClCR,eAAC6J,IAAU,CACVC,KAAK,kCACLC,QAAM,EACN7J,UAAU,cACV8J,WAAW,SACXZ,aAActD,EAAKqB,UACnB/G,SAAUsD,GAASI,EAAIsC,GAAGN,KAAK,YAAapC,GAAOlD,SAAA,CACnDC,cAAA,SAAOP,UAAU,YAAWM,SAAC,mBAC7BC,cAACR,IAAK,CAACyD,MAAM,SAAQlD,SAAC,WACtBC,cAACR,IAAK,CAACyD,MAAM,WAAUlD,SAAC,oBAK3BR,eAAA,OAAKE,UAAU,UAASM,SAAA,CACvBC,cAACwJ,IAAM,CAAC/J,UAAU,SAASC,QAASA,IAAM2D,EAAIsC,GAAGN,KAAK,aAAa,GAAMtF,SAAC,oBAG1EC,cAAC8I,IAAO,CACPW,SAAsC,IAA5B9C,EAAiBlF,OAC3BsH,UAAW9J,EAAW,SAAW,MACjCgK,QAAQ,QACRC,QAASlJ,cAACmJ,IAAO,CAAC1J,UAAU,cAAaM,SAAC,4BAAkCA,SAC5EC,cAACwJ,IAAM,CAAC/J,UAAU,WAAWC,QAAS6H,EAAQxH,SAAC,kBAKhDsF,EAAKkB,UACLhH,eAAA,OAAKE,UAAU,iBAAgBM,SAAA,CAC9BC,cAAC0J,IAAiB,CAACC,SAAU,MAAO1J,MAAO2J,IAAW7J,SAAUsF,EAAKe,OACrEpG,cAAC8I,IAAO,CACPrJ,UAAU,eACVC,QAASA,KACH2F,EAAKoB,aAAapD,EAAIsC,GAAGN,KAAK,eAAe,EAAK,EAExDwE,OAAQA,KACPC,YAAW,KACVzG,EAAIsC,GAAGN,KAAK,eAAe,EAAM,GAC/B,KAAK,EAET0E,KAAM1E,EAAKoB,YACXsC,UAAU,MACVE,QAAQ,QACRC,QAASlJ,cAACmJ,IAAO,CAAC1J,UAAU,eAAcM,SAAC,YAAkBA,SAC7DC,cAAA,OAAKP,UAAU,YAAWM,SACzBC,cAACgK,EAAK,CACLvK,UAAU,OACVC,QAASuK,gBACFC,YAAgB7E,EAAKe,KAAK,QAKpCpG,cAAA,OAAKP,UAAU,kBAAiBM,SAAEoF,UAIrC5F,eAAC4K,IAAK,CACLJ,KAAM1E,EAAKmB,UACXxH,KAAK,KACLoL,QAASA,IAAM/G,EAAIsC,GAAGN,KAAK,aAAa,GACxCgF,UAAQ,EACR5K,UAAU,wBAAuBM,SAAA,CACjCC,cAACmK,IAAMG,OAAM,CAAAvK,SAAC,oBACdC,cAACmK,IAAMI,KAAI,CAAAxK,SACVC,cAAA,OAAKP,UAAU,gBAAeM,SAC7BC,cAACwK,IAAG,CAAAzK,SACF4H,IAAWE,KAAI,CAACZ,EAAS/E,KACzB,MAAM7C,EAAUsH,EAAiBiB,SAASX,EAAQpH,OAClD,OACCG,cAACyK,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAE5K,SAClBC,cAACb,EAAO,IACH8H,EACJ5H,QAASA,EACTS,SAAU+G,EACVjH,SAAUkH,KALa5E,EAOnB,UAMXlC,cAACmK,IAAMS,OAAM,CAAA7K,SACZC,cAACwJ,IAAM,CAAC9J,QAASA,IAAM2D,EAAIsC,GAAGN,KAAK,aAAa,GAAOtF,SAAC,gBAGrD,C","file":"static/js/7.5ef5cebf.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react';\n\ntype WindowSize = { width: number; height: number };\n\nconst useWindow = () => {\n\tconst [focused, setFocused] = useState(hasFocus);\n\tconst [windowSize, setWindowSize] = useState<WindowSize>({ width: window.innerWidth, height: window.innerHeight });\n\tconst winRef = useRef({ focused, windowSize });\n\n\t//? --------------------- Utils ---------------------------------\n\n\tconst setWindowSizeOnResize = () => {\n\t\tsetWindowSize({ width: window.innerWidth, height: window.innerHeight });\n\t};\n\n\t//? --------------------- useEffects ----------------------------\n\n\tuseEffect(() => {\n\t\tsetFocused(hasFocus());\n\t\tconst onFocus = () => setFocused(true);\n\t\tconst onBlur = () => setFocused(false);\n\t\twindow.addEventListener('focus', onFocus);\n\t\twindow.addEventListener('blur', onBlur);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('focus', onFocus);\n\t\t\twindow.removeEventListener('blur', onBlur);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetWindowSizeOnResize();\n\t\twindow.addEventListener('resize', setWindowSizeOnResize);\n\t\treturn () => window.removeEventListener('resize', setWindowSizeOnResize);\n\t}, []);\n\n\tuseEffect(() => {\n\t\twinRef.current = { focused, windowSize };\n\t}, [focused, windowSize]);\n\n\t// ---------------------------------------------------------------\n\n\treturn {\n\t\twinRef,\n\t\tsize: windowSize,\n\t\thasFocus: focused,\n\t\tisMobile: windowSize?.width < 481,\n\t\tisDesktop: windowSize?.width > 992,\n\t};\n};\n\nconst hasFocus = () => typeof document !== 'undefined' && document.hasFocus();\n\nexport default useWindow;\n","import { useState } from 'react';\nimport { Radio } from 'rsuite';\n\ntype Props = {\n\tbg: string;\n\ticon: string;\n\ttitle: string;\n\tchecked?: boolean;\n\tonSelect: (title: string) => void;\n\tonRemove: (title: string) => void;\n};\n\nconst Service = (props: Props) => {\n\tconst [checked, setChecked] = useState(props.checked || false);\n\n\t// ? --------------------------- Functions --------------------------\n\tconst onChange = () => {\n\t\tif (!checked) props.onSelect(props.title);\n\t\telse props.onRemove(props.title);\n\n\t\tsetChecked(!checked);\n\t};\n\n\t// -------------------------------------------------------\n\treturn (\n\t\t<Radio className='service-radio' checked={checked} onClick={onChange}>\n\t\t\t<div className='service-logo' style={{ backgroundColor: props.bg }}>\n\t\t\t\t<img src={props.icon} alt={props.title} />\n\t\t\t</div>\n\t\t\t<h2>{props.title}</h2>\n\t\t</Radio>\n\t);\n};\n\nexport default Service;\n","export const IS = {\n\tarray: (data: any): data is any[] => Array.isArray(data),\n\tdate: (data: any): data is Date => data instanceof Date,\n\tblob: (data: any): data is Blob => data instanceof Blob,\n\tstring: (data: any): data is string => typeof data === 'string',\n\tnumber: (data: any): data is number => typeof data === 'number',\n\tboolean: (data: any): data is boolean => typeof data === 'boolean',\n\tobject_only: (data: any): data is OBJECT => typeof data === 'object',\n\tfunction: (data: any): data is () => {} => typeof data === 'function',\n\tobject: (data: any): data is OBJECT => typeof data === 'object' && !Array.isArray(data),\n};\n\nexport default IS;\n","import IS from './IS';\nexport type Obj = Record<string | number, any>;\n\nexport const isEqualObjects = (...objects: object[]): boolean => {\n\tconst first = JSON.stringify(recursiveSort(objects[0]));\n\treturn objects.every((obj, i) => i === 0 || JSON.stringify(recursiveSort(obj)) === first);\n};\n\nexport const isEmptyObject = (obj: OBJECT) => Object.keys(obj || {}).length === 0;\n\nexport const removeEmptyProps = (obj: OBJECT): OBJECT => {\n\tif (!IS.object(obj)) return obj;\n\n\tconst newObj: OBJECT = { ...obj };\n\tconst entries = Object.entries(newObj || {});\n\tentries?.forEach(([key, value]) => {\n\t\tif (IS.boolean(value)) return;\n\t\tif (IS.string(value) && obj[key] === '') return delete newObj[key];\n\t});\n\n\treturn newObj;\n};\n\nexport const sortObject = (obj: any[] | Record<string | number, any>) => {\n\tif (Array.isArray(obj)) return [...(obj || [])]?.sort();\n\treturn (\n\t\tObject.keys(obj || {})\n\t\t\t.sort()\n\t\t\t// eslint-disable-next-line no-sequences\n\t\t\t.reduce((res, key) => ((res[key] = obj[key]), res), {} as any)\n\t);\n};\n\nexport const recursiveSort = (obj: any[] | Record<string | number, any>) => {\n\tif (typeof obj !== 'object') return;\n\tlet sortedObject: any = sortObject(obj);\n\n\tif (Array.isArray(sortedObject))\n\t\tsortedObject.forEach((item, i) => typeof item === 'object' && (sortedObject[i] = recursiveSort(item)));\n\telse\n\t\tObject.entries(sortedObject || {})?.forEach(\n\t\t\t([key, value]) => typeof value === 'object' && (sortedObject[key] = recursiveSort(value || []))\n\t\t);\n\n\treturn sortedObject;\n};\n\nexport const iterateOverObjects = (data: any, objMap: (obj: any, depth?: number) => any = x => x) => {\n\tdata = deepClone(data);\n\n\tconst recObjects = (data: any, objMap: (obj: any, depth?: number) => any = x => x, depth: number = 0): any => {\n\t\tif (!data || typeof data !== 'object') return data;\n\n\t\t//* Handle Array of Objects\n\t\tif (Array.isArray(data)) return data.map((x: any) => recObjects(x, objMap, depth + 1));\n\n\t\t// * Handle Single Object\n\t\tdata = objMap(data, depth);\n\t\tObject.entries(data || {})?.forEach(([key, value]) => {\n\t\t\tif (!value || typeof value != 'object') return;\n\t\t\tdata[key] = recObjects(value, objMap, depth + 1);\n\t\t});\n\n\t\treturn data;\n\t};\n\n\treturn recObjects(data, objMap);\n};\n\nexport const renameKey = (object: any = {}, curName: string, newName: string) => {\n\tif (object?.[curName] || object?.[curName] === '') object[newName] = object?.[curName];\n\tdelete object?.[curName];\n};\n\nexport const isFormDataEmpty = (formData: FormData) => !formData?.entries()?.next()?.value;\n\nexport const deepClone = <T extends object = any>(object: T) => JSON.parse(JSON.stringify(object || {})) as T;\n\n//*------------------------- 👇toJson -----------------------------\nexport const toJson = (data?: any, options: toJsonOptions = {}): any => {\n\tif (!data) return {};\n\n\t//* Single Object\n\tconst { remove_empty = false } = options;\n\n\t//* Array\n\tif (IS.array(data)) return data?.map(d => toJson(d, options));\n\n\tlet object = { ...data };\n\n\tobject = iterateOverObjects(object, (obj, depth) => {\n\t\tif (IS.string(obj)) return obj;\n\n\t\tObject.entries(obj || {}).forEach(([key, value]) => {\n\t\t\tif (remove_empty && ((IS.string(value) && value === '') || (!IS.boolean(value) && !value))) delete obj?.[key];\n\t\t\tif (depth === (options?.depth ?? 0)) {\n\t\t\t\tif ([...(options?.block || [])].includes(key)) delete obj[key];\n\t\t\t\tif (options?.only && ![...(options?.only || [])].includes(key)) delete obj?.[key];\n\t\t\t}\n\t\t});\n\n\t\tif (options?.sortKeys) obj = sortObject(obj);\n\n\t\treturn obj;\n\t});\n\n\treturn object;\n};\n\nexport type toJsonOptions = {\n\tonly?: string[];\n\tdepth?: number;\n\tblock?: string[];\n\tsortKeys?: boolean;\n\tremove_empty?: boolean;\n};\n\n//*-------------------- Object Utils --------------------------------\n\nexport const OU = (obj: any) => {\n\tconst set = (key: string | string[], value: any) => {\n\t\tlet curObj = obj;\n\t\tconst keys = IS.string(key) ? [...key?.split('.')] : key;\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst curKey = keys?.[i];\n\t\t\tconst isLast = i === keys?.length - 1;\n\t\t\tif (curObj?.[curKey] === undefined) curObj[curKey] = {};\n\t\t\tif (isLast) curObj[curKey] = value;\n\t\t\tcurObj = curObj?.[curKey];\n\t\t}\n\t\treturn obj;\n\t};\n\n\treturn { set };\n};\n\n//*------------------- Object Diff -----------------------------------\nexport const diffObjects = (oldObj: any, newObj: any) => {\n\tconst diff: any = {};\n\tconst entries = Object.entries(newObj || {});\n\n\tentries?.forEach(([key, value]) => {\n\t\tconst isBothArr = IS.array(oldObj[key]) && IS.array(value);\n\t\tconst isBothObj = IS.object(oldObj[key]) && IS.object(value);\n\n\t\tif (isBothObj || isBothArr) {\n\t\t\tif (isEqualObjects(oldObj[key], value)) return;\n\t\t\tdiff[key] = diffObjects(oldObj?.[key], value);\n\t\t\treturn;\n\t\t}\n\n\t\tif (oldObj?.[key] === value) return;\n\n\t\tdiff[key] = value;\n\t});\n\n\treturn diff;\n};\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCloneRegular(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64 464H288c8.8 0 16-7.2 16-16V384h48v64c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V224c0-35.3 28.7-64 64-64h64v48H64c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16zM224 304H448c8.8 0 16-7.2 16-16V64c0-8.8-7.2-16-16-16H224c-8.8 0-16 7.2-16 16V288c0 8.8 7.2 16 16 16zm-64-16V64c0-35.3 28.7-64 64-64H448c35.3 0 64 28.7 64 64V288c0 35.3-28.7 64-64 64H224c-35.3 0-64-28.7-64-64z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloneRegular);\nexport default __webpack_public_path__ + \"static/media/clone-regular.2cd58d8c.svg\";\nexport { ForwardRef as ReactComponent };","import './index.scss';\nimport { useEffect, useState } from 'react';\nimport Service from '@src/Components/Service';\nimport useWindow from '@src/Tools/Hooks/useWindow';\nimport { useData } from '@src/Tools/Hooks/useData';\nimport { CONFIG } from '@src/App/Config/constants';\nimport Email from '@assets/icons/services/email.svg';\nimport Gmail from '@assets/icons/services/gmail.svg';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { copyToClipboard } from '@src/Tools/Utils/React';\nimport Telegram from '@assets/icons/services/telegram.svg';\nimport EditableInput from '@src/Components/EditableInput/EditableInput';\nimport { lightfair } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { ReactComponent as Clone } from '@assets/icons/clone-regular.svg';\nimport { Button, Col, Modal, Radio, RadioGroup, Row, Tooltip, Whisper } from 'rsuite';\n\nconst GetButton = () => {\n\tconst { isMobile } = useWindow();\n\tconst [buttons, setButtons] = useState<JSX.Element>();\n\tconst { set, temp } = useData({\n\t\turl: '',\n\t\tcode: '',\n\t\tsubject: '',\n\t\tisValid: true,\n\t\tshowCode: false,\n\t\topenModal: false,\n\t\topenTooltip: false,\n\t\tshareMode: 'direct',\n\t});\n\tconst [selectedServices, setSelectedServices] = useState<string[]>(['email']);\n\n\t// ? -------------------------- Functions ------------------------------\n\tconst onAddService = (title: string) => {\n\t\tsetSelectedServices([...selectedServices, title]);\n\t};\n\n\tconst onRemoveService = (title: string) => {\n\t\tconst filtered = selectedServices?.filter(service => service !== title);\n\t\tsetSelectedServices(filtered);\n\t};\n\n\tconst getShareLink = (service_title: string, url: string) => {\n\t\treturn `${CONFIG.FRONT_DOMAIN}/share/?service=${service_title}&subject=${temp.subject}&link=${url}`;\n\t};\n\n\tconst getCode = () => {\n\t\tif (!temp.url) {\n\t\t\tset.ou.temp('isValid', false);\n\t\t\treturn;\n\t\t}\n\t\tif (selectedServices.length === 0) {\n\t\t\tset.ou.temp('showCode', false);\n\t\t\treturn;\n\t\t}\n\n\t\tconst validated_url = urlValidation(temp.url || '');\n\t\tconst selected = Services(validated_url).filter(service => selectedServices.includes(service.title));\n\n\t\tconst buttons = (\n\t\t\t<div className='flex-center'>\n\t\t\t\t{selected.map((service, i) => {\n\t\t\t\t\tconst href = temp.shareMode === 'direct' ? service.url : getShareLink(service.title, validated_url);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<a href={href} target='_blank' rel='noreferrer' key={i}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={service.icon}\n\t\t\t\t\t\t\t\twidth={32}\n\t\t\t\t\t\t\t\theight={32}\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: service.bg, borderRadius: 4, paddingLeft: 1, paddingRight: 1 }}\n\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t\tsetButtons(buttons);\n\n\t\tconst code = `\t<div>\n\t\t\t${selected\n\t\t\t\t.map(service => {\n\t\t\t\t\tconst href = temp.shareMode === 'direct' ? service.url : getShareLink(service.title, validated_url);\n\t\t\t\t\treturn `<a href=\"${href}\" target=\"_blank\"><img src=\"${service.iconUrl}\" width=\"32\" height=\"32\" style=\"background-color:${service.bg}; border-radius:4px\"/></a>`;\n\t\t\t\t})\n\t\t\t\t.join(`\\n\t\t\t`)}\n\t</div>`;\n\t\tset.ou.temp('code', code);\n\n\t\tset.ou.temp('showCode', true);\n\t};\n\n\tconst urlValidation = (url: string) => {\n\t\tif (url.includes('://')) return url;\n\n\t\treturn `http://${url}`;\n\t};\n\n\t// ? ---------------------- Var -------------------------------\n\n\tconst Services = (url?: string) => {\n\t\treturn [\n\t\t\t{\n\t\t\t\ttitle: 'email',\n\t\t\t\ticon: Email,\n\t\t\t\ticonUrl: 'https://github.com/openscilab/mybutton/raw/main/src/Assets/icons/services/email.svg',\n\t\t\t\tbg: '#888990',\n\t\t\t\turl: `mailto:?subject=${temp.subject}&body=${url}`,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'gmail',\n\t\t\t\ticon: Gmail,\n\t\t\t\ticonUrl: 'https://github.com/openscilab/mybutton/raw/main/src/Assets/icons/services/gmail.svg',\n\t\t\t\tbg: '#EA4335',\n\t\t\t\turl: `https://mail.google.com/mail/u/0/?ui=2&fs=1&tf=cm&su=${temp.subject}&body=${url}`,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'telegram',\n\t\t\t\ticon: Telegram,\n\t\t\t\ticonUrl: 'https://github.com/openscilab/mybutton/raw/main/src/Assets/icons/services/telegram.svg',\n\t\t\t\tbg: '#2CA5E0',\n\t\t\t\turl: `https://telegram.me/share/url?url=${url}&text=${temp.subject}`,\n\t\t\t},\n\t\t];\n\t};\n\n\t// ? ------------------------------ useEffect -------------------------------\n\tuseEffect(() => {\n\t\tif (temp.showCode) getCode();\n\t}, [selectedServices]);\n\t// --------------------------------------------------------------------------\n\treturn (\n\t\t<div className='get-button-layout'>\n\t\t\t<div className='get-button-container'>\n\t\t\t\t<h1>Get share button code</h1>\n\t\t\t\t<div className='input-container'>\n\t\t\t\t\t<EditableInput\n\t\t\t\t\t\tlabel='Link'\n\t\t\t\t\t\tdefaultValue={temp.url}\n\t\t\t\t\t\tisValid={temp.isValid}\n\t\t\t\t\t\terrorMessage='required'\n\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\tif (!temp.isValid) {\n\t\t\t\t\t\t\t\tset.ou.temp('isValid', true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tset.ou.temp('url', e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplaceholder='https://www.example.com'\n\t\t\t\t\t/>\n\t\t\t\t\t<EditableInput\n\t\t\t\t\t\tlabel='Subject'\n\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\tset.ou.temp('subject', e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdefaultValue={temp.subject}\n\t\t\t\t\t\tplaceholder='Subject'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Whisper\n\t\t\t\t\tplacement='top'\n\t\t\t\t\tcontrolId='control-id-hover'\n\t\t\t\t\ttrigger='hover'\n\t\t\t\t\tspeaker={\n\t\t\t\t\t\t<Tooltip className='share-mode-tooltip'>\n\t\t\t\t\t\t\tChoose to share your link directly on the selected services or do it through MyButton website.\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t}>\n\t\t\t\t\t<div className='radiogroup-whisper'>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\tname='radio-group-inline-picker-label'\n\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\tclassName='mode-picker'\n\t\t\t\t\t\t\tappearance='picker'\n\t\t\t\t\t\t\tdefaultValue={temp.shareMode}\n\t\t\t\t\t\t\tonChange={value => set.ou.temp('shareMode', value)}>\n\t\t\t\t\t\t\t<label className='box-label'>Sharing Mode: </label>\n\t\t\t\t\t\t\t<Radio value='direct'>Direct</Radio>\n\t\t\t\t\t\t\t<Radio value='indirect'>Indirect</Radio>\n\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t</div>\n\t\t\t\t</Whisper>\n\n\t\t\t\t<div className='buttons'>\n\t\t\t\t\t<Button className='choose' onClick={() => set.ou.temp('openModal', true)}>\n\t\t\t\t\t\tChoose Services\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Whisper\n\t\t\t\t\t\tdisabled={selectedServices.length !== 0}\n\t\t\t\t\t\tplacement={isMobile ? 'bottom' : 'top'}\n\t\t\t\t\t\ttrigger='click'\n\t\t\t\t\t\tspeaker={<Tooltip className='err-tooltip'>Please choose services!</Tooltip>}>\n\t\t\t\t\t\t<Button className='get-code' onClick={getCode}>\n\t\t\t\t\t\t\tGet Code\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Whisper>\n\t\t\t\t</div>\n\t\t\t\t{temp.showCode && (\n\t\t\t\t\t<div className='code-container'>\n\t\t\t\t\t\t<SyntaxHighlighter language={'xml'} style={lightfair} children={temp.code} />\n\t\t\t\t\t\t<Whisper\n\t\t\t\t\t\t\tclassName='copy-whisper'\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (!temp.openTooltip) set.ou.temp('openTooltip', true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\tset.ou.temp('openTooltip', false);\n\t\t\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\topen={temp.openTooltip}\n\t\t\t\t\t\t\tplacement='top'\n\t\t\t\t\t\t\ttrigger='click'\n\t\t\t\t\t\t\tspeaker={<Tooltip className='copy-tooltip'>Copied!</Tooltip>}>\n\t\t\t\t\t\t\t<div className='copy-icon'>\n\t\t\t\t\t\t\t\t<Clone\n\t\t\t\t\t\t\t\t\tclassName='icon'\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tawait copyToClipboard(temp.code);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Whisper>\n\t\t\t\t\t\t<div className='services-button'>{buttons}</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<Modal\n\t\t\t\topen={temp.openModal}\n\t\t\t\tsize='sm'\n\t\t\t\tonClose={() => set.ou.temp('openModal', false)}\n\t\t\t\tbackdrop\n\t\t\t\tclassName='choose-services-modal'>\n\t\t\t\t<Modal.Header>Choose services</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div className='services-list'>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{Services().map((service, i) => {\n\t\t\t\t\t\t\t\tconst checked = selectedServices.includes(service.title);\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Col xs={12} sm={8} key={i}>\n\t\t\t\t\t\t\t\t\t\t<Service\n\t\t\t\t\t\t\t\t\t\t\t{...service}\n\t\t\t\t\t\t\t\t\t\t\tchecked={checked}\n\t\t\t\t\t\t\t\t\t\t\tonSelect={onAddService}\n\t\t\t\t\t\t\t\t\t\t\tonRemove={onRemoveService}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button onClick={() => set.ou.temp('openModal', false)}>Done</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n};\n\nexport default GetButton;\n","import { useMemo, useEffect } from 'react';\nimport { useState, useCallback } from 'react';\nimport { deepClone, OU } from '../../Utils/Object';\nimport { isEqualObjects } from '../../Utils/Object';\n\ntype OU_Path = string | string[];\n\nexport const useData = <T extends OBJECT = any>(inputData: T, dependencies: any[] = []) => {\n\tconst [data, setData] = useState<T>(deepClone(inputData));\n\tconst [temp, setTempData] = useState<T>(deepClone(inputData));\n\n\tuseEffect(() => {\n\t\tconst cloned = deepClone(inputData);\n\t\tif (isEqualObjects(cloned, data)) return;\n\t\tsetTempData(cloned);\n\t\tsetData(cloned);\n\t}, dependencies);\n\n\tuseEffect(() => {\n\t\tif (isEqualObjects(temp, data)) return;\n\t\tsetTempData(deepClone(data));\n\t}, [data]);\n\n\tconst set = {\n\t\tdata: setData,\n\t\ttemp: setTempData,\n\t\tou: {\n\t\t\tdata: (path: OU_Path, value: any) => setData(s => OU(deepClone(s)).set(path, value)),\n\t\t\ttemp: (path: OU_Path, value: any) => setTempData(s => OU(deepClone(s)).set(path, value)),\n\t\t},\n\t};\n\n\tconst discard = useCallback(() => {\n\t\tsetTempData(data);\n\t}, [inputData, data]);\n\n\tconst isChanged = useMemo(() => !isEqualObjects(data, temp), [data, temp]);\n\n\treturn { set: useMemo(() => set, []), temp, data, discard, isChanged };\n};\n"],"sourceRoot":""}